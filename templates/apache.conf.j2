<VirtualHost *:80>
    ServerName {{ domainname }}
{% if diaspora_yml.configuration.environment.require_ssl %}
    RedirectPermanent / https://{{ domainname }}/
</VirtualHost>


<VirtualHost *:443>
    ServerName {{ domainname }}
{% endif %}
    DocumentRoot {{ diaspora_home }}/diaspora/public

    RewriteEngine On

    RewriteCond %{REQUEST_URI} ^/http-bind
    RewriteRule ^/(http\-bind.*)$ balancer://chat%{REQUEST_URI} [P,QSA,L]

    RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f
    RewriteRule ^/(.*)$ balancer://upstream%{REQUEST_URI} [P,QSA,L]

    <Proxy balancer://upstream>
        BalancerMember http://127.0.0.1:{{ listen_port }}
    </Proxy>

    <Proxy balancer://chat>
        BalancerMember http://0.0.0.0:5280
    </Proxy>

    ProxyRequests Off
    ProxyVia On
    ProxyPreserveHost On

    <Proxy *>
        Require all granted
    </Proxy>

    <Directory {{ diaspora_home }}/diaspora/public>
        Require all granted
        Options -MultiViews -Indexes
    </Directory>

{% if diaspora_yml.configuration.environment.require_ssl %}
    RequestHeader set X_FORWARDED_PROTO https
    SSLEngine On
{% if use_ansible_letsencrypt %}
    SSLCertificateFile /etc/letsencrypt/live/{{ letsencrypt_domain }}/cert.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem
    SSLCertificateChainFile /etc/letsencrypt/live/{{ letsencrypt_domain }}/chain.pem
{% else %}
{% if use_cert_files %}
    SSLCertificateFile {{ ssl_cert_file }}
    SSLCertificateKeyFile {{ ssl_key_file }}
    SSLCertificateChainFile {{ ssl_chain_file }}
{% else %}
    SSLCertificateFile /etc/ssl/certs/{{ servicename }}.crt
    SSLCertificateKeyFile /etc/ssl/private/{{ servicename }}.key
    SSLCertificateChainFile /etc/ssl/certs/{{ servicename }}.chain.crt
{% endif %}{% endif %}
{% endif %}
</VirtualHost>
